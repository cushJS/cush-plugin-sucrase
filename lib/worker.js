// Generated by CoffeeScript 2.3.0
var log, processed, sourceMapOptions, sucrase;

sucrase = require('@cush/sucrase');

log = require('lodge');

processed = Symbol('sucrase:processed');

sourceMapOptions = {};

module.exports = function() {
  var config, isFlow, process;
  config = this.get('sucrase', {});
  process = (asset, config) => {
    config.filePath = this.relative(asset.path);
    config.enableLegacyBabel5ModuleInterop = true;
    config.sourceMapOptions = sourceMapOptions;
    return sucrase.transform(asset.content, config);
  };
  isFlow = function(pack) {
    var deps;
    deps = pack.devDependencies;
    return Boolean(deps && deps['flow-bin']);
  };
  this.transform('.js', function(asset, pack) {
    var transforms;
    if (!asset[processed]) {
      transforms = ['imports'];
      if (isFlow(pack)) {
        transforms.push('flow');
      }
      return process(asset, {transforms});
    }
  });
  if (config.exts) {
    return this.transform(Object.keys(config.exts), function(asset) {
      var result;
      asset[processed] = true;
      result = process(asset, {
        transforms: ['imports'].concat(config.exts[asset.ext]),
        jsxPragma: config.jsxPragma,
        jsxFragmentPragma: config.jsxFragmentPragma
      });
      asset.ext = '.js';
      return result;
    });
  }
};
